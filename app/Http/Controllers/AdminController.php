<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Illuminate\Support\Facades\Mail;
use App\Mail\UserPasswordMail;

class AdminController extends Controller
{


    public function __construct()
    {
        //
    }

    public function index()
    {
        return view('payment.payment-create');
    }

    public function settings()
    {
        return view('admin.settings');
    }

    public function users(Request $request)
    {
        $users = User::all();
        return view('admin.users', ['users'=>$users]);
    }

    public function registerUser(Request $request)
    {
        return view('admin.register-user');
    }
    
    public function storeUser(Request $request)
    {
        $autoGeneratedPassword = $request->auto_generated_password;
    
        $password = $autoGeneratedPassword ? $autoGeneratedPassword : $request->password;
    
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|lowercase|email|max:255|unique:'.User::class,
            'password' => $autoGeneratedPassword ? [] : ['required', 'confirmed', Rules\Password::defaults()],
        ]);
    
        try{
        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($password),
            'role' => 'customer',
        ]);
    
        Mail::to($user->email)->send(new UserPasswordMail($user, $password));
    
        event(new Registered($user));

            return response()->json(['success' => true]);
        } catch (\Exception $e) {
            return response()->json(['success' => false, 'errors' => $e->getMessage()]);
        }
    }    
}
